{"version":3,"sources":["components/AddCircleButton.js","components/FormDialog.js","../node_modules/@material-ui/core/esm/MenuItem/MenuItem.js","../node_modules/@material-ui/core/esm/ListItem/ListItem.js","pages/Home/AddDialog.js","pages/Home/GroupCard.js","pages/Home/Page.js","pages/Home/index.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_core_Tooltip__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_2__","_material_ui_icons_AddCircleOutline__WEBPACK_IMPORTED_MODULE_3__","_material_ui_icons_AddCircleOutline__WEBPACK_IMPORTED_MODULE_3___default","AddCircleButton","_ref","title","onClick","a","createElement","_material_ui_core_Dialog__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_DialogActions__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_DialogContent__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_DialogTitle__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_5__","FormDialog","props","message","confirmText","cancelText","open","onClose","onSubmit","children","event","preventDefault","color","type","defaultProps","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0___default","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","clsx__WEBPACK_IMPORTED_MODULE_4__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__","_ListItem__WEBPACK_IMPORTED_MODULE_6__","MenuItem","forwardRef","ref","tabIndex","classes","className","_props$component","component","_props$disableGutters","disableGutters","_props$role","role","selected","tabIndexProp","other","disabled","undefined","button","Object","root","gutters","__webpack_exports__","theme","typography","subtitle1","minHeight","paddingTop","paddingBottom","boxSizing","width","overflow","whiteSpace","paddingLeft","paddingRight","name","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1___default","_ButtonBase__WEBPACK_IMPORTED_MODULE_6__","_utils_reactHelpers__WEBPACK_IMPORTED_MODULE_7__","_List_ListContext__WEBPACK_IMPORTED_MODULE_8__","react_dom__WEBPACK_IMPORTED_MODULE_9__","react_dom__WEBPACK_IMPORTED_MODULE_9___default","useEnhancedEffect","window","useEffect","useLayoutEffect","ListItem","_props$alignItems","alignItems","_props$autoFocus","autoFocus","_props$button","childrenProp","componentProp","_props$ContainerCompo","ContainerComponent","_props$ContainerProps","ContainerProps","ContainerClassName","dense","_props$disabled","_props$divider","divider","focusVisibleClassName","_props$selected","context","useContext","childContext","listItemRef","useRef","current","focus","Children","toArray","hasSecondaryAction","length","handleOwnRef","useCallback","instance","findDOMNode","handleRef","componentProps","alignItemsFlexStart","secondaryAction","Component","focusVisible","Provider","value","container","pop","display","justifyContent","position","textDecoration","textAlign","&$focusVisible","backgroundColor","palette","action","&$selected, &$selected:hover","&$disabled","opacity","borderBottom","concat","backgroundClip","transition","transitions","create","duration","shortest","&:hover","hover","@media (hover: none)","permissionOptions","permissionText","private","protected","public","AddDialog","onFormChange","handleChange","label","objectSpread","defineProperty","target","react_default","Box","flexDirection","mt","TextField","fullWidth","onChange","required","FormControl","InputLabel","htmlFor","Select","permission","inputProps","id","map","option","index","key","useCardStyles","makeStyles","content","marginLeft","spacing","marginRight","GroupCard","group","Card","CardContent","Typography","gutterBottom","variant","CardActions","Button","size","Link","to","GROUP_FN","Page","auth","useAuth","firebase","useFirebase","_useState","useState","_useState2","slicedToArray","openAddDialog","setOpenAddDialog","_useState3","_useState4","form","setForm","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","userSteam","setUserSteam","_useState9","_useState10","groups","setGroups","handleClose","steam","refUser","uid","child","on","snap","exists","promises","keys","val","groupId","refGroup","once","then","Promise","resolve","all","result","sortBy","off","LoadingPage","p","m","Home_GroupCard","Home_AddDialog","uniqid","groupUserId","now","Date","toString","update","set","createdTime","disableDelete","disableRename","users","refGroupUser","joinedTime","d","Home_Page"],"mappings":"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","file":"static/js/6.48899852.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\nimport AddCircleOutline from '@material-ui/icons/AddCircleOutline'\n\nconst AddCircleButton = ({ title, onClick }) => (\n  <Tooltip title={title}>\n    <IconButton onClick={onClick}>\n      <AddCircleOutline />\n    </IconButton>\n  </Tooltip>\n)\n\nAddCircleButton.propTypes = {\n  title: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired\n}\n\nexport default AddCircleButton\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Button from '@material-ui/core/Button'\n\nconst FormDialog = (props) => {\n  const {\n    message,\n    confirmText,\n    cancelText,\n    open,\n    onClose,\n    onSubmit,\n    children\n  } = props\n\n  const handleSubmit = (event) => {\n    onSubmit(event)\n    event.preventDefault()\n  }\n\n  return (\n    <Dialog open={open} onClose={onClose}>\n      <DialogTitle>{message}</DialogTitle>\n      <form onSubmit={handleSubmit}>\n        <DialogContent>\n          {children}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClose} color=\"primary\">\n            {cancelText}\n          </Button>\n          <Button type=\"submit\" color=\"primary\">\n            {confirmText}\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  )\n}\n\n\nFormDialog.propTypes = {\n  message: PropTypes.string,\n  confirmText: PropTypes.string,\n  cancelText: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired\n}\n\nFormDialog.defaultProps = {\n  message: '',\n  confirmText: '是的',\n  cancelText: '取消'\n}\n\nexport default FormDialog\n","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListItem from '../ListItem';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.subtitle1, {\n      minHeight: 48,\n      paddingTop: 4,\n      paddingBottom: 4,\n      boxSizing: 'border-box',\n      width: 'auto',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    }),\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: {\n      paddingLeft: 16,\n      paddingRight: 16\n    },\n\n    /* Styles applied to the root element if `selected={true}`. */\n    selected: {}\n  };\n};\nvar MenuItem = React.forwardRef(function MenuItem(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'menuitem' : _props$role,\n      selected = props.selected,\n      tabIndexProp = props.tabIndex,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"role\", \"selected\", \"tabIndex\"]);\n\n  var tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return React.createElement(ListItem, _extends({\n    button: true,\n    role: role,\n    tabIndex: tabIndex,\n    component: component,\n    selected: selected,\n    disableGutters: disableGutters,\n    className: clsx(classes.root, className, selected && classes.selected, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes = {\n  /**\n   * Menu item contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiMenuItem'\n})(MenuItem);","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport { isMuiElement, useForkRef } from '../utils/reactHelpers';\nimport ListContext from '../List/ListContext';\nimport ReactDOM from 'react-dom';\nimport warning from 'warning';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the (normally root) `component` element. May be wrapped by a `container`. */\n    root: {\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      position: 'relative',\n      textDecoration: 'none',\n      width: '100%',\n      boxSizing: 'border-box',\n      textAlign: 'left',\n      paddingTop: 8,\n      paddingBottom: 8,\n      '&$focusVisible': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&$selected, &$selected:hover': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&$disabled': {\n        opacity: 0.5\n      }\n    },\n\n    /* Styles applied to the `container` element if `children` includes `ListItemSecondaryAction`. */\n    container: {\n      position: 'relative'\n    },\n\n    /* Pseudo-class applied to the `component`'s `focusVisibleClassName` property if `button={true}`. */\n    focusVisible: {},\n\n    /* Styles applied to the `component` element if dense. */\n    dense: {\n      paddingTop: 4,\n      paddingBottom: 4\n    },\n\n    /* Styles applied to the `component` element if `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      alignItems: 'flex-start'\n    },\n\n    /* Pseudo-class applied to the inner `component` element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the inner `component` element if `divider={true}`. */\n    divider: {\n      borderBottom: \"1px solid \".concat(theme.palette.divider),\n      backgroundClip: 'padding-box'\n    },\n\n    /* Styles applied to the inner `component` element if `disableGutters={false}`. */\n    gutters: {\n      paddingLeft: 16,\n      paddingRight: 16\n    },\n\n    /* Styles applied to the inner `component` element if `button={true}`. */\n    button: {\n      transition: theme.transitions.create('background-color', {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: theme.palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the `component` element if `children` includes `ListItemSecondaryAction`. */\n    secondaryAction: {\n      // Add some space to avoid collision as `ListItemSecondaryAction`\n      // is absolutely positioned.\n      paddingRight: 48\n    },\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {}\n  };\n};\nvar useEnhancedEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\n/**\n * Uses an additional container component if `ListItemSecondaryAction` is the last child.\n */\n\nvar ListItem = React.forwardRef(function ListItem(props, ref) {\n  var _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'center' : _props$alignItems,\n      _props$autoFocus = props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n      _props$button = props.button,\n      button = _props$button === void 0 ? false : _props$button,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      componentProp = props.component,\n      _props$ContainerCompo = props.ContainerComponent,\n      ContainerComponent = _props$ContainerCompo === void 0 ? 'li' : _props$ContainerCompo,\n      _props$ContainerProps = props.ContainerProps;\n  _props$ContainerProps = _props$ContainerProps === void 0 ? {} : _props$ContainerProps;\n\n  var ContainerClassName = _props$ContainerProps.className,\n      ContainerProps = _objectWithoutProperties(_props$ContainerProps, [\"className\"]),\n      dense = props.dense,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$divider = props.divider,\n      divider = _props$divider === void 0 ? false : _props$divider,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      other = _objectWithoutProperties(props, [\"alignItems\", \"autoFocus\", \"button\", \"children\", \"classes\", \"className\", \"component\", \"ContainerComponent\", \"ContainerProps\", \"dense\", \"disabled\", \"disableGutters\", \"divider\", \"focusVisibleClassName\", \"selected\"]);\n\n  var context = React.useContext(ListContext);\n  var childContext = {\n    dense: dense || context.dense || false,\n    alignItems: alignItems\n  };\n  var listItemRef = React.useRef(null);\n  useEnhancedEffect(function () {\n    if (autoFocus) {\n      if (listItemRef.current) {\n        listItemRef.current.focus();\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Material-UI: unable to set focus to a ListItem whose component has not been rendered.') : void 0;\n      }\n    }\n  }, [autoFocus]);\n  var children = React.Children.toArray(childrenProp);\n  var hasSecondaryAction = children.length && isMuiElement(children[children.length - 1], ['ListItemSecondaryAction']);\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    listItemRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(handleOwnRef, ref);\n\n  var componentProps = _extends({\n    className: clsx(classes.root, className, childContext.dense && classes.dense, !disableGutters && classes.gutters, divider && classes.divider, disabled && classes.disabled, button && classes.button, alignItems !== \"center\" && classes.alignItemsFlexStart, hasSecondaryAction && classes.secondaryAction, selected && classes.selected),\n    disabled: disabled\n  }, other);\n\n  var Component = componentProp || 'li';\n\n  if (button) {\n    componentProps.component = componentProp || 'div';\n    componentProps.focusVisibleClassName = clsx(classes.focusVisible, focusVisibleClassName);\n    Component = ButtonBase;\n  }\n\n  if (hasSecondaryAction) {\n    // Use div by default.\n    Component = !componentProps.component && !componentProp ? 'div' : Component; // Avoid nesting of li > li.\n\n    if (ContainerComponent === 'li') {\n      if (Component === 'li') {\n        Component = 'div';\n      } else if (componentProps.component === 'li') {\n        componentProps.component = 'div';\n      }\n    }\n\n    return React.createElement(ListContext.Provider, {\n      value: childContext\n    }, React.createElement(ContainerComponent, _extends({\n      className: clsx(classes.container, ContainerClassName),\n      ref: handleRef\n    }, ContainerProps), React.createElement(Component, componentProps, children), children.pop()));\n  }\n\n  return React.createElement(ListContext.Provider, {\n    value: childContext\n  }, React.createElement(Component, _extends({\n    ref: handleRef\n  }, componentProps), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItem.propTypes = {\n  /**\n   * Defines the `align-items` style property.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center']),\n\n  /**\n   * If `true`, the list item will be focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be a button (using `ButtonBase`).\n   */\n  button: PropTypes.bool,\n\n  /**\n   * The content of the component. If a `ListItemSecondaryAction` is used it must\n   * be the last child.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    var children = React.Children.toArray(props.children); // React.Children.toArray(props.children).findLastIndex(isListItemSecondaryAction)\n\n    var secondaryActionIndex = -1;\n\n    for (var i = children.length - 1; i >= 0; i -= 1) {\n      var child = children[i];\n\n      if (isMuiElement(child, ['ListItemSecondaryAction'])) {\n        secondaryActionIndex = i;\n        break;\n      }\n    } //  is ListItemSecondaryAction the last child of ListItem\n\n\n    if (secondaryActionIndex !== -1 && secondaryActionIndex !== children.length - 1) {\n      return new Error('Material-UI: you used an element after ListItemSecondaryAction. ' + 'For ListItem to detect that it has a secondary action ' + 'you must pass it as the last child to ListItem.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   * By default, it's a `li` when `button` is `false` and a `div` when `button` is `true`.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The container component used when a `ListItemSecondaryAction` is the last child.\n   */\n  ContainerComponent: PropTypes.elementType,\n\n  /**\n   * Properties applied to the container component if used.\n   */\n  ContainerProps: PropTypes.object,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, a 1px light border is added to the bottom of the list item.\n   */\n  divider: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * Use to apply selected styling.\n   */\n  selected: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItem'\n})(ListItem);","import React from 'react'\nimport PropTypes from 'prop-types'\nimport FormControl from '@material-ui/core/FormControl'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport TextField from '@material-ui/core/TextField'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Box from '@material-ui/core/Box'\nimport FormDialog from '../../components/FormDialog'\n\nconst permissionOptions = ['private', 'protected', 'public']\nconst permissionText = {\n  private: '私有',\n  protected: '不公開',\n  public: '公開'\n}\n\nconst AddDialog = ({ value, onFormChange, open, onClose, onSubmit }) => {\n  const handleChange = (label) => (event) => onFormChange({ ...value, [label]: event.target.value })\n  return (\n    <FormDialog\n      message=\"新增組織\"\n      confirmText=\"新增\"\n      cancelText=\"取消\"\n      open={open}\n      onClose={onClose}\n      onSubmit={onSubmit}\n    >\n      <Box display=\"flex\" flexDirection=\"column\">\n        <Box mt={1}>\n          <TextField\n            autoFocus\n            fullWidth\n            label=\"組織名稱\"\n            value={value.name}\n            onChange={handleChange('name')}\n            required\n          />\n        </Box>\n        <Box mt={1}>\n          <FormControl fullWidth>\n            <InputLabel htmlFor=\"permission\">權限</InputLabel>\n            <Select\n              value={value.permission}\n              onChange={handleChange('permission')}\n              inputProps={{\n                id: 'permission',\n              }}\n            >\n              {permissionOptions.map((option, index) => <MenuItem key={index} value={option}>{permissionText[option]}</MenuItem>)}\n            </Select>\n          </FormControl>\n        </Box>\n      </Box>\n    </FormDialog>\n  )\n}\n\nAddDialog.propTypes = {\n  value: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    permission: PropTypes.oneOf(permissionOptions)\n  }).isRequired,\n  onFormChange: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired\n}\n\nexport default AddDialog\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/styles'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardActions from '@material-ui/core/CardActions'\nimport Button from '@material-ui/core/Button'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\nimport { GROUP_FN } from '../pathnames'\n\nconst useCardStyles = makeStyles((theme) => ({\n  content: {\n    marginLeft: theme.spacing(10),\n    marginRight: theme.spacing(10)\n  }\n}))\n\nconst GroupCard = ({ group }) => {\n  const classes = useCardStyles()\n  return (\n    <Card>\n      <CardContent className={classes.content}>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {group.name}\n        </Typography>\n      </CardContent>\n      <Box display=\"flex\" justifyContent=\"center\">\n        <CardActions>\n          <Button size=\"small\" color=\"primary\" component={Link} to={GROUP_FN({ id: group.id })}>\n            進入組織\n          </Button>\n        </CardActions>\n      </Box>\n    </Card>\n  )\n}\n\nGroupCard.propTypes = {\n  group: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired\n  }).isRequired\n}\n\nexport default GroupCard\n","import React, { useState, useEffect } from 'react'\nimport uniqid from 'uniqid'\nimport sortBy from 'lodash-es/sortBy'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\nimport useAuth from '../../auth/useAuth'\nimport useFirebase from '../../firebase/useFirebase'\nimport LoadingPage from '../../components/LoadingPage'\nimport AddCircleButton from '../../components/AddCircleButton'\nimport AddDialog from './AddDialog'\nimport GroupCard from './GroupCard'\n\nconst defaultForm = () => ({\n  name: '未命名',\n  permission: 'private'\n})\n\nconst Page = () => {\n  const auth = useAuth()\n  const firebase = useFirebase()\n  const [openAddDialog, setOpenAddDialog] = useState(false)\n  const [form, setForm] = useState(defaultForm())\n  const [isLoading, setIsLoading] = useState(true)\n  const [userSteam, setUserSteam] = useState(null)\n  const [groups, setGroups] = useState([])\n\n  const handleClose = () => {\n    setForm(defaultForm())\n    setOpenAddDialog(false)\n  }\n\n  const handleSubmit = () => {\n    const groupId = uniqid()\n    const groupUserId = `${groupId}_${auth.uid}`\n    const now = (new Date()).toString()\n    firebase.refUser({ uid: auth.uid })\n      .child('groups')\n      .update({\n        [groupId]: now\n      })\n    firebase.refGroup({ id: groupId }).set({\n      id: groupId,\n      createdTime: now,\n      disableDelete: false,\n      disableRename: false,\n      permission: form.permission,\n      name: form.name,\n      users: {\n        [auth.uid]: now\n      }\n    })\n    firebase.refGroupUser({ id: groupUserId }).set({\n      id: groupUserId,\n      groupId: groupId,\n      uid: auth.uid,\n      joinedTime: now\n    })\n    handleClose()\n  }\n\n  useEffect(() => {\n    const steam = firebase.refUser({ uid: auth.uid })\n      .child('groups')\n\n    steam.on('value', (snap) => {\n      if (!snap.exists()) {\n        setGroups([])\n        setIsLoading(false)\n        return\n      }\n      const promises = Object.keys(snap.val())\n        .map((groupId) => {\n          return firebase.refGroup({ id: groupId })\n            .once('value')\n            .then((snap) => Promise.resolve(snap.val()))\n        })\n      Promise.all(promises)\n        .then((result) => {\n          setGroups(sortBy(result, 'createdTime'))\n          if (isLoading) setIsLoading(false)\n        })\n    })\n\n    if (userSteam === null) setUserSteam(steam)\n\n    return () => {\n      if (userSteam !== null) userSteam.off()\n    }\n  // eslint-disable-next-line\n  }, [userSteam])\n\n  if (isLoading) return (<LoadingPage />)\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection=\"row\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      p={5}\n    >\n      {groups.length !== 0 ? groups.map((group) => (\n        <Box key={group.id} m={2}>\n          <GroupCard group={group} />\n        </Box>\n      )) : (\n        <Box m={1}>\n          <Typography variant=\"h6\">沒有組織</Typography>\n        </Box>\n      )}\n      <AddCircleButton title=\"新增組織\" onClick={() => setOpenAddDialog(true)} />\n      <AddDialog\n        value={form}\n        onFormChange={setForm}\n        open={openAddDialog}\n        onClose={handleClose}\n        onSubmit={handleSubmit}\n      />\n    </Box>\n  )\n}\n\nexport default Page\n","export { default } from './Page'\n"],"sourceRoot":""}